<?php

namespace Rygilles\OpenApiGenerator\OpenApi;


/**
 * Defines a security scheme that can be used by the operations.
 * Supported schemes are HTTP authentication,
 * an API key (either as a header or as a query parameter),
 * OAuth2's common flows (implicit, password, application and access code) as defined in RFC6749,
 * and OpenID Connect Discovery.
 *
 * @version 3.0.0
 * @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#securitySchemeObject
 *
 * @package Rygilles\OpenApiGenerator\OpenApi
 */
class SecurityScheme extends Object
{
	/**
	 * The type of the security scheme. Valid values are "apiKey", "http", "oauth2", "openIdConnect". (REQUIRED)
	 *
	 * @var string
	 */
	public $type;

	/**
	 * A short description for security scheme. CommonMark syntax MAY be used for rich text representation.
	 *
	 * @var string
	 */
	public $description;

	/**
	 * The name of the header, query or cookie parameter to be used. (REQUIRED)
	 *
	 * @var string
	 */
	public $name;

	/**
	 * The location of the API key. Valid values are "query", "header" or "cookie". (REQUIRED)
	 *
	 * @var string
	 */
	public $in;

	/**
	 * The name of the HTTP Authorization scheme to be used in the Authorization header as defined in RFC7235. (REQUIRED)
	 *
	 * @var string
	 */
	public $scheme;

	/**
	 * A hint to the client to identify how the bearer token is formatted.
	 * Bearer tokens are usually generated by an authorization server,
	 * so this information is primarily for documentation purposes.
	 *
	 * @var string
	 */
	public $bearerFormat;

	/**
	 * An object containing configuration information for the flow types supported. (REQUIRED)
	 *
	 * @var OAuthFlows
	 */
	public $flows;

	/**
	 * OpenId Connect URL to discover OAuth2 configuration values. This MUST be in the form of a URL. (REQUIRED)
	 *
	 * @var string
	 */
	public $openIdConnectUrl;

	/**
	 * {@inheritdoc}
	 */
	protected $requiredAttributes = [
		'type',
		'name',
		'in',
		'scheme',
		'flows',
		'openIdConnectUrl'
	];

	/**
	 * {@inheritdoc}
	 */
	protected function getFixedAttributes()
	{
		return [
			'type'              => $this->type,
			'description'       => $this->description,
			'name'              => $this->name,
			'in'                => $this->in,
			'scheme'            => $this->scheme,
			'bearerFormat'      => $this->bearerFormat,
			'flows'             => $this->flows,
			'openIdConnectUrl'  => $this->openIdConnectUrl
		];
	}
}